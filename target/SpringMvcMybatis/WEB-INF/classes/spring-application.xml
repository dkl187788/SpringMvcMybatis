<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context-3.2.xsd
						   http://www.springframework.org/schema/tx
				           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
				           http://www.springframework.org/schema/mvc
				           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
				           http://www.springframework.org/schema/aop
				           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
       default-autowire="byName">

    <!-- 不扫描带有@Controller注解的类。因为这些类已经随容器启动时，在servlet-context中扫描过一遍了 -->
    <context:annotation-config />

    <context:component-scan base-package="com.dukl.web">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 用注解来实现事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 加载jdbc.properties文件，用于下边的数据库配置
    <context:property-placeholder location="classpath:jdbc.properties"/>
    -->
    <!-- 数据源配置文件 -->
    <context:property-placeholder location="classpath:database.properties" />
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/javalearn?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8" />
        <property name="username" value="root" />
        <property name="password" value="admin" />

        <property name="filters" value="stat,log4j" />
        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />
        <property name="timeBetweenEvictionRunsMillis" value="3000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x' FROM DUAL" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20" />
    </bean>

    <!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="plugins">
            <array>
                <ref bean="pagePlugin" />
            </array>
        </property>
        <!--configLocation属性指定mybatis的核心配置文件 -->
        <property name="mapperLocations">
            <list>
                <value>classpath:com/dukl/web/user/mapping/*Mapper.xml</value>
            </list>
        </property>

        <!-- 别名 -->
        <!-- <property name="typeAliasesPackage" value="com.ailk.web.*.model"></property>-->

    </bean>

    <!-- 扫描sql映射文件  开始-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dukl.web.*.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- 扫描sql映射文件  结束-->

    <!-- mybatis 插件用于分页 -->
    <bean id="pagePlugin" class="com.dukl.base.pulgin.ibatis.plugin.PagePlugin">
        <property name="properties">
            <props>
                <prop key="dialect">com.dukl.base.pulgin.jdbc.dialet.MySQLDialect</prop>
                <prop key="pageSqlId">.*query.*</prop>
            </props>
        </property>
    </bean>

    <!-- 配置druid监控sping jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
          scope="prototype">
        <property name="patterns">
            <list>
                <value>com.dukl.web.*.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>
    <!--
    <bean id="baseAopLogRecord" class="com.ailk.base.BaseAopLogRecord"></bean>
    <aop:config>
        <aop:aspect id="b" ref="baseAopLogRecord">
            <aop:pointcut id="log" expression="execution(* com.ailk.web.partner.service.impl.*.*(..))"/>
            <aop:before pointcut-ref="log" method="before"/>
            <aop:after pointcut-ref="log" method="after"/>
        </aop:aspect>
    </aop:config>
    -->
    <!-- 拦截器 -->
    <!-- <mvc:interceptors>
         <mvc:interceptor>
             <mvc:mapping path="/*/*.json"/>
             <mvc:exclude-mapping path="/versionController/bookBusinessLoadVersion.json"/>
             <bean class="com.dukl.web.base.TokenInterceptor">
                 <property name="rib" ref="RedisInitBean"></property>
             </bean>
         </mvc:interceptor>
         <mvc:interceptor>
             <mvc:mapping path="/**"/>
             <bean class="com.dukl.web.base.StopWatchHandlerInterceptor">
             </bean>
         </mvc:interceptor>
     </mvc:interceptors>-->


</beans>
